{"version":3,"sources":["components/Footer.js","components/Meta.js","components/Message.js","components/Loader.js","actions/orderActions.js","../../src/index.tsx","screens/OrderScreen.js"],"names":["Footer","className","href","class","src","alt","Meta","title","defaultProps","Message","variant","children","Loader","createOrder","order","dispatch","getState","a","type","ORDER_CREATE_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","post","data","ORDER_CREATE_SUCCESS","payload","CART_CLEAR_ITEMS","localStorage","removeItem","message","response","logout","ORDER_CREATE_FAIL","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","console","log","ORDER_DETAILS_FAIL","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","deliverOrder","ORDER_DELIVER_REQUEST","_id","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","PayPalButton","isSdkReady","window","this","props","actions","currency","options","amount","shippingPreference","purchase_units","currency_code","value","application_context","shipping_preference","onSuccess","createSubscription","onApprove","style","Button","React","ReactDOM","createOrderFn","undefined","onButtonReady","queryParams","Object","k","name","script","document","Error","Component","PropTypes","catchError","onError","clientId","merchantId","intent","commit","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug","func","OrderScreen","match","history","useState","sdkReady","setSdkReady","setAmount","key","params","useDispatch","orderDetails","useSelector","state","loading","error","orderPay","loadingPay","successPay","success","orderDeliver","loadingDeliver","successDeliver","reference","Date","getTime","email","publicKey","componentProps","text","handlePaypalSuccessAction","onClose","useEffect","payKey","createElement","async","onload","body","appendChild","push","ORDER_PAY_RESET","ORDER_DELIVER_RESET","isPaid","paypal","totalPrice","user","shippingAddress","mobile","address","city","postalCode","country","isDelivered","deliveredAt","orderItems","length","map","item","index","qty","price","toLocaleString","itemsPrice","shippingPrice","paidAt","isAdmin","onClick"],"mappings":"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","file":"static/js/13.4c9ec0ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer className='pt-5'>\r\n        <hr />\r\n        <div className='container-fluid'>\r\n          <div className='row'>\r\n            <div className='col-md-4'>\r\n              <h6>\r\n                <b>COMPANY INFORMATION</b>\r\n              </h6>\r\n              <div className='row'>\r\n                <p className='pl-3'>\r\n                  <b>Address:</b>\r\n                </p>\r\n                <p className='pl-3'>\r\n                  <small>\r\n                    530 New Los Angeles Ave #115-338\r\n                    <br />\r\n                    Moorpark, CA 93021, USA\r\n                  </small>{' '}\r\n                </p>\r\n              </div>\r\n              <div className='row'>\r\n                <p className='pl-3'>\r\n                  <b>Call Us:</b>\r\n                </p>\r\n                <p className='pl-3'>\r\n                  <small>1.805.823.8888:</small>{' '}\r\n                </p>\r\n              </div>\r\n              <div className='row'>\r\n                <p className='pl-3'>\r\n                  <b>Email Us:</b>\r\n                </p>\r\n                <p className='pl-3'>\r\n                  <small>sales@bestwatchesdeal.com</small>{' '}\r\n                </p>\r\n              </div>\r\n              <div className='row'>\r\n                <p className='pl-3'>\r\n                  <b>\r\n                    Customer <br />\r\n                    Service\r\n                    <br /> Hours:\r\n                  </b>\r\n                </p>\r\n                <p className='pl-3'>\r\n                  <small>\r\n                    Monday - Wednesday: 7:00 AM - 6:00 PM\r\n                    <br />\r\n                    Thursday - Sunday: CLOSED\r\n                    <br /> Email Support Available 7 Days a Week{' '}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className='col-md-2'>\r\n              <h6>\r\n                <b>CUSTOMER SERVICE</b>\r\n              </h6>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>About Us</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Why Buy From Us</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Sell My Watch</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Frequently Asked Questions</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Customer Reviews</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n            </div>\r\n            <div className='col-md-2'>\r\n              <h6>\r\n                <b>POLICIES</b>\r\n              </h6>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Extended Return Policy</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>No Restocking Fee*</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Shipping Policies</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Privacy Policy</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Payment Methods</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n            </div>\r\n            <div className='col-md-2'>\r\n              <h6>\r\n                <b>HELP CENTER</b>\r\n              </h6>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Site Map</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Free Bracelet Sizing</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Authenticity & Service Guarantee</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>No Restocking Fee*</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Warranty Policy</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n            </div>\r\n            <div className='col-md-2'>\r\n              <h6>\r\n                <b>WATCH EDUCATION</b>\r\n              </h6>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>AuthenticWatches.com Blog</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Rolex Serial Numbers</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Watch Terminology</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Watch Movements</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n              <div className='pt-2'>\r\n                <a href='#' class='serv'>\r\n                  <small>Watch Accuracy</small>\r\n                </a>\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='container'>\r\n          <div className='row justify-content-center'>\r\n            <img src='images/white-header-details.gif' alt='' className='pt-3' />\r\n          </div>\r\n        </div>\r\n        <p className='text-center pt-4 pb-2'>\r\n          Copyright ©2001-2022 BestDealWatches.com. All rights reserved.\r\n        </p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To BestWatchDeal.com'\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img src='/images/loading.gif' alt='loading...' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n    \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n  \r\n        const config = {\r\n            headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n  \r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        )\r\n  \r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n  \r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n    \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n  \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n  \r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n  \r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    }catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n    \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n    \r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n    \r\n        const { data } = await axios.get(`/api/orders`, config)\r\n  \r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Footer from '../components/Footer'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\nimport Meta from '../components/Meta'\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    \r\n    const [amount, setAmount] = useState(0)\r\n    const [key, setKey] = useState('')\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const config = {\r\n        reference: (new Date()).getTime(),\r\n        email: userInfo.email,\r\n        amount: amount,\r\n        publicKey: key,\r\n    }\r\n\r\n    const handlePaypalSuccessAction = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n  \r\n    const handlePaypalCloseAction = () => {\r\n        console.log('closed')\r\n    }\r\n\r\n    const componentProps = {\r\n        ...config,\r\n        text: 'Pay Now',\r\n        onSuccess: (paymentResult) => handlePaypalSuccessAction(paymentResult),\r\n        onClose: handlePaypalCloseAction,\r\n    }\r\n\r\n    useEffect(() => {\r\n        const payKey = async () => {\r\n          const { data: clientId } = await axios.get('/api/config/paypal');\r\n          const script = document.createElement('script');\r\n          script.type = 'text/javascript';\r\n          script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n          script.async = true;\r\n          script.onload = () => {\r\n              setSdkReady(true)\r\n          }\r\n          document.body.appendChild(script)\r\n        };\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                payKey()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        if(order){\r\n            setAmount(order.totalPrice * 100)\r\n        }\r\n    }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Meta title='Beta Disney Order' />\r\n        <section className='section-margin calc-60px cart_area'>\r\n          <div className='container'>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <>\r\n                <div className='section-intro pb-60px'>\r\n                  <h4>\r\n                    Order Code:{' '}\r\n                    <span className='section-intro__style'>{order._id}</span>\r\n                  </h4>\r\n                </div>\r\n                <div className='row card-row'>\r\n                  <div className='col-md-5'>\r\n                    <div className='order_box'>\r\n                      <h2>Shipping Details</h2>\r\n                      <ul className='list'>\r\n                        <li>\r\n                          <strong>\r\n                            Name:{' '}\r\n                            <span className='last'>{order.user.name}</span>\r\n                          </strong>\r\n                          <div className='clearfix'></div>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            Email:{' '}\r\n                            <span className='last'>{order.user.email}</span>\r\n                          </strong>\r\n                          <div className='clearfix'></div>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            Mobile Number:{' '}\r\n                            <span className='last'>\r\n                              {order.shippingAddress.mobile}\r\n                            </span>\r\n                          </strong>\r\n                          <div className='clearfix'></div>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            Address:{' '}\r\n                            <span className='last'>\r\n                              {order.shippingAddress.address}\r\n                            </span>\r\n                          </strong>\r\n                          <div className='clearfix'></div>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            City:{' '}\r\n                            <span className='last'>\r\n                              {order.shippingAddress.city}\r\n                            </span>\r\n                          </strong>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            Postal Code:{' '}\r\n                            <span className='last'>\r\n                              {order.shippingAddress.postalCode}\r\n                            </span>\r\n                          </strong>\r\n                        </li>\r\n                        <li>\r\n                          <strong>\r\n                            Country:{' '}\r\n                            <span className='last'>\r\n                              {order.shippingAddress.country}\r\n                            </span>\r\n                          </strong>\r\n                        </li>\r\n                      </ul>\r\n                      <div className='payment_item mt-3'>\r\n                        {order.isDelivered ? (\r\n                          <p>Order was delivered on {order.deliveredAt}</p>\r\n                        ) : (\r\n                          <p>Order not delivered yet.</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='col-md-7'>\r\n                    <div className='order_box'>\r\n                      <h2>Order Details</h2>\r\n                      {order.orderItems.length === 0 ? (\r\n                        <Message>Order is empty</Message>\r\n                      ) : (\r\n                        <>\r\n                          <ul className='list'>\r\n                            {order.orderItems.map((item, index) => (\r\n                              <li key={index}>\r\n                                <strong>\r\n                                  {item.name}{' '}\r\n                                  <span className='middle'> x {item.qty}</span>{' '}\r\n                                  <span className='last'>\r\n                                    &#x24;{' '}\r\n                                    {(item.price * item.qty).toLocaleString()}\r\n                                  </span>\r\n                                </strong>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                          <ul className='list list_2'>\r\n                            <li>\r\n                              <strong>\r\n                                Subtotal <span>&#x24;{order.itemsPrice}</span>\r\n                              </strong>\r\n                            </li>\r\n                            <li>\r\n                              <strong>\r\n                                Shipping{' '}\r\n                                <span>&#x24;{order.shippingPrice}</span>\r\n                              </strong>\r\n                            </li>\r\n                            <li>\r\n                              <strong>\r\n                                Total <span>{order.totalPrice}</span>\r\n                              </strong>\r\n                            </li>\r\n                          </ul>\r\n\r\n                          <div className='payment_item mt-3'>\r\n                            {order.isPaid ? (\r\n                              <p>\r\n                                {loadingPay && <Loader />}\r\n                                Order was paid on {order.paidAt}\r\n                              </p>\r\n                            ) : (\r\n                              <p>Order has not been paid yet.</p>\r\n                            )}\r\n                          </div>\r\n                          <hr />\r\n                          {!order.isPaid && (\r\n                            <div className='text-center'>\r\n                              {loadingPay && <Loader />}\r\n                              {!sdkReady ? (\r\n                                <Loader />\r\n                              ) : (\r\n                                <PayPalButton\r\n                                  className='paypal-butto'\r\n                                  {...componentProps}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          )}\r\n                          {loadingDeliver && <Loader />}\r\n                          {userInfo &&\r\n                            userInfo.isAdmin &&\r\n                            order.isPaid &&\r\n                            !order.isDelivered && (\r\n                              <div className='text-center'>\r\n                                <button\r\n                                  type='button'\r\n                                  className='paypal-butto'\r\n                                  onClick={deliverHandler}\r\n                                >\r\n                                  Mark As Delivered\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </section>\r\n        <Footer />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderScreen"],"sourceRoot":""}